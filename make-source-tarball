#!/bin/bash

# use $TMPDIR as temporary space for improved performance

REQUIRED="git gpg make python3 g++ go find tar"
NODEVERSION=22.5.1
YARNVERSION=1.22.22

ORG=openbao
PKG=openbao
DEV=false
if [ $# -gt 0 ]; then
    if [ "$1" != "-dev" ]; then
	echo "Usage: make-source-tarball [-dev]" >&2
	echo "-dev means take source from ~/work/$PKG instead of github" >&2
	exit 1
    fi
    DEV=true
    REQUIRED="$REQUIRED cpio"
fi

for TOOL in $REQUIRED; do
    if [ ! -x /usr/bin/$TOOL ]; then
	echo "Required command '$TOOL' missing" >&2
	exit 2
    fi
done

BASE=$PKG-src
set -ex
cd "`dirname $0`"
HERE=$PWD
rm -f $BASE-*.tar.gz
cd ${TMPDIR:-/tmp}
for OLDBASE in $BASE-*; do
    if [ -d $OLDBASE/go ]; then
	# this is in case it wasn't fully created and chmodded
        PATH=$PWD/$OLDBASE/go/bin:$PATH GOPATH=$PWD/$OLDBASE/gopath go clean -modcache
    fi
done
rm -rf $BASE-*
VERSION="`sed -n 's/^Version:[ \t]*//p' $HERE/$PKG.spec|sed 's/~/-/'`"
BASE="$BASE-$VERSION"
mkdir $BASE
pushd $BASE

# install required node.js version
curl -sSL https://nodejs.org/download/release/v$NODEVERSION/node-v$NODEVERSION-linux-x64.tar.gz | tar -xzf -
export NODEJS_HOME=$PWD/node-v$NODEVERSION-linux-x64
PATH=$NODEJS_HOME/bin:$PATH
node --version
#npx --yes update-browserslist-db@latest

# install yarn 
YARN_HOME=$PWD/yarn-$YARNVERSION
mkdir $YARN_HOME
OLDHOME=$HOME
HOME=$YARN_HOME
touch $HOME/.profile
curl -o- -sSL https://yarnpkg.com/install.sh | bash -s -- --version $YARNVERSION
. $HOME/.profile
gpgconf --kill gpg-agent
HOME=$OLDHOME
yarn --version

# install source
if $DEV; then
    mkdir $PKG-$VERSION
    TGTDIR=$PWD/$PKG-$VERSION
    (cd ~/work/$PKG; git ls-files | cpio -pd $TGTDIR)
else
    curl -sSL https://codeload.github.com/$ORG/$PKG/tar.gz/v$VERSION | tar xzf -
fi

# install required go version
mkdir gopath
export GOPATH=$PWD/gopath
GOVERSION="`cat $PKG-$VERSION/.go-version`"
curl -sSL https://golang.org/dl/go$GOVERSION.src.tar.gz | tar -xzf -
pushd go/src
GOSRC=$PWD
./make.bash
popd
PATH=$PWD/go/bin:$GOPATH/bin:$PATH
go version

cd $PKG-$VERSION
make bootstrap
make static-dist
make prep
go run github.com/google/go-licenses@v1.6.0 report ./... --ignore github.com/$ORG/$PKG --template $HERE/LICENSE_DEPENDENCIES.tpl > LICENSE_DEPENDENCIES.md
popd

rm -rf $NODEJS_HOME $YARN_HOME
find $GOPATH/pkg/mod -type d ! -perm -200 -print0|xargs -0 -r chmod u+w
rm -rf $GOPATH/mod/*.*
rm -f $GOPATH/bin/*
pushd $GOSRC
./clean.bash
popd

tar --exclude .git -czf $HERE/$BASE.tar.gz $BASE
rm -rf $BASE
